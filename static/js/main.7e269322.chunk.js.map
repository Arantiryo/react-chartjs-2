{"version":3,"sources":["../../src/chart.tsx","../../src/index.tsx","Home.js","charts/VerticalBar.js","charts/HorizontalBar.js","charts/StackedBar.js","charts/GroupedBar.js","charts/Line.js","charts/MultiAxisLine.js","charts/Scatter.js","charts/Doughnut.js","charts/Pie.js","charts/Polar.js","charts/Radar.js","charts/Dynamic.js","charts/MultiType.js","charts/Crazy.js","charts/ClickEvents.js","index.js"],"names":["ChartComponent","forwardRef","id","props","className","height","width","redraw","type","data","options","plugins","canvas","useRef","computedData","useMemo","merge","useState","chart","setChart","useImperativeHandle","renderChart","Chart","updateChart","datasets","newDataSets","newChartData","currentDataSets","assign","currentDataSet","find","d","newDataSet","destroyChart","useEffect","setTimeout","ref","onClick","e","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","intersect","Line","Bar","Radar","Doughnut","PolarArea","Bubble","Pie","Scatter","Home","href","to","labels","label","backgroundColor","borderColor","borderWidth","scales","yAxes","ticks","beginAtZero","VerticalBar","indexAxis","elements","bar","responsive","legend","position","title","display","text","HorizontalBarChart","stacked","xAxes","StackedBar","GroupedBar","fill","LineChart","yAxisID","gridLines","drawOnArea","MultiAxisLine","rand","Math","round","random","x","y","ScatterChart","DoughnutChart","PieChart","Polar","scale","RadarChart","genData","Dynamic","setData","interval","setInterval","clearInterval","MultiType","floor","Crazy","ClickEvents","clickedDataset","setClickedDataset","clickedElement","setClickedElement","clickedElements","setClickedElements","dataset","length","datasetIndex","element","index","App","exact","path","component","HorizontalBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e269322.chunk.js","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js/auto';\n\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = forwardRef<Chart | undefined, Props>((props, ref) => {\n  const {\n    id,\n    className,\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options = {},\n    plugins = [],\n  } = props;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<Chart.ChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<Chart>();\n\n  useImperativeHandle<Chart | undefined, Chart | undefined>(ref, () => chart, [\n    chart,\n  ]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new Chart(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!chart) return;\n\n    const { getDatasetAtEvent, getElementAtEvent, getElementsAtEvent } = props;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(e, 'index', { intersect: true }, false),\n        e\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      return {\n        ...currentDataSet,\n        ...newDataSet,\n        data: currentDataSet.data,\n      };\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n\n  return (\n    <canvas\n      height={height}\n      width={width}\n      ref={canvas}\n      id={id}\n      className={className}\n      onClick={onClick}\n      data-testid='canvas'\n    />\n  );\n});\n\nexport default ChartComponent;\n","import React, { forwardRef } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n// eslint-disable-next-line no-unused-vars\nimport Chart from 'chart.js/auto';\n\nexport const Line = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='line'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bar = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Radar = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='radar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Doughnut = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='doughnut'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const PolarArea = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='polarArea'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bubble = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bubble'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Pie = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='pie'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Scatter = forwardRef<Chart | undefined, Props>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='scatter'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport default ChartComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>@reactchartjs/react-chart.js</h1>\n      <h2 className='subtitle'>React wrapper for Chart.js</h2>\n      <div className='links'>\n        <a\n          className='btn btn-npm'\n          href='https://www.npmjs.com/package/react-chartjs-2'\n        >\n          NPM\n        </a>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2'\n        >\n          Github\n        </a>\n        <a className='btn btn-chartjs' href='https://www.chartjs.org'>\n          Chart.js\n        </a>\n      </div>\n    </div>\n    <hr />\n    <div className='categories'>\n      <div className='category'>\n        <h3 className='title'>Bar Charts</h3>\n        <ul className='items'>\n          <li className='entry'>\n            <Link to='/vertical-bar'>Vertical</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/horizontal-bar'>Horizontal</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/grouped-bar'>Grouped</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/stacked-bar'>Stacked</Link>\n          </li>\n        </ul>\n      </div>\n      <div className='category'>\n        <h3 className='title'>Line Charts</h3>\n        <ul className='items'>\n          <li className='entry'>\n            <Link to='/line'>Basic</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/multi-axis-line'>Multi Axis</Link>\n          </li>\n        </ul>\n      </div>\n      <div className='category'>\n        <h3 className='title'>Other Charts</h3>\n        <ul className='items'>\n          <li className='entry'>\n            <Link to='/scatter'>Scatter</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/doughnut'>Doughnut</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/pie'>Pie</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/polar'>Polar</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/radar'>Radar</Link>\n          </li>\n        </ul>\n      </div>\n      <div className='category'>\n        <h3 className='title'>Advanced Charts</h3>\n        <ul className='items'>\n          <li className='entry'>\n            <Link to='/dynamic-bar'>Dynamic</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/multi'>Multi Type</Link>\n          </li>\n          <li className='entry'>\n            <Link to='/crazy'>Crazy</Link>\n          </li>\n        </ul>\n      </div>\n      <div className='category'>\n        <h3 className='title'>Events</h3>\n        <ul className='items'>\n          <li className='entry'>\n            <Link to='/click-events'>Click Events</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <hr />\n    <div className='footer'>\n      <h6>\n        For questions or issues please visit{' '}\n        <a href='https://github.com/reactchartjs/react-chartjs-2/issues'>\n          Github\n        </a>\n      </h6>\n    </div>\n  </>\n);\n\nexport default Home;\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst VerticalBar = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Vertical Bar Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/VerticalBar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Bar data={data} options={options} />\n  </>\n)\n\nexport default VerticalBar\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst options = {\n  indexAxis: 'y',\n   // Elements options apply to all of the options unless overridden in a dataset\n   // In this case, we are setting the border of each horizontal bar to be 2px wide\n   elements: {\n     bar: {\n       borderWidth: 2,\n     }\n   },\n   responsive: true,\n   plugins: {\n     legend: {\n       position: 'right',\n     },\n     title: {\n       display: true,\n       text: 'Chart.js Horizontal Bar Chart'\n     }\n   }\n}\n\nconst HorizontalBarChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Horizontal Bar Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/HorizontalBar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Bar data={data} options={options} />\n  </>\n)\n\nexport default HorizontalBarChart\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['1', '2', '3', '4', '5', '6'],\n  datasets: [\n    {\n      label: '# of Red Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: 'rgb(255, 99, 132)',\n    },\n    {\n      label: '# of Blue Votes',\n      data: [2, 3, 20, 5, 1, 4],\n      backgroundColor: 'rgb(54, 162, 235)',\n    },\n    {\n      label: '# of Green Votes',\n      data: [3, 10, 13, 15, 22, 30],\n      backgroundColor: 'rgb(75, 192, 192)',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        stacked: true,\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        stacked: true,\n      },\n    ],\n  },\n}\n\nconst StackedBar = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Stacked Bar Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/StackedBar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Bar data={data} options={options} />\n  </>\n)\n\nexport default StackedBar\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['1', '2', '3', '4', '5', '6'],\n  datasets: [\n    {\n      label: '# of Red Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: 'rgb(255, 99, 132)',\n    },\n    {\n      label: '# of Blue Votes',\n      data: [2, 3, 20, 5, 1, 4],\n      backgroundColor: 'rgb(54, 162, 235)',\n    },\n    {\n      label: '# of Green Votes',\n      data: [3, 10, 13, 15, 22, 30],\n      backgroundColor: 'rgb(75, 192, 192)',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst GroupedBar = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Grouped Bar Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/GroupedBar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Bar data={data} options={options} />\n  </>\n)\n\nexport default GroupedBar\n","import React from 'react'\nimport { Line } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['1', '2', '3', '4', '5', '6'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      fill: false,\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgba(255, 99, 132, 0.2)',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst LineChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Line Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Line.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Line data={data} options={options} />\n  </>\n)\n\nexport default LineChart\n","import React from 'react'\nimport { Line } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['1', '2', '3', '4', '5', '6'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      fill: false,\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgba(255, 99, 132, 0.2)',\n      yAxisID: 'y-axis-1',\n    },\n    {\n      label: '# of No Votes',\n      data: [1, 2, 1, 1, 2, 2],\n      fill: false,\n      backgroundColor: 'rgb(54, 162, 235)',\n      borderColor: 'rgba(54, 162, 235, 0.2)',\n      yAxisID: 'y-axis-2',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        id: 'y-axis-1',\n      },\n      {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        id: 'y-axis-2',\n        gridLines: {\n          drawOnArea: false,\n        },\n      },\n    ],\n  },\n}\n\nconst MultiAxisLine = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Multi Axis Line Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/MultiAxisLine.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Line data={data} options={options} />\n  </>\n)\n\nexport default MultiAxisLine\n","import React from 'react'\nimport { Scatter } from '@reactchartjs/react-chart.js'\n\nconst rand = () => Math.round(Math.random() * 20 - 10)\n\nconst data = {\n  datasets: [\n    {\n      label: 'A dataset',\n      data: [\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n        { x: rand(), y: rand() },\n      ],\n      backgroundColor: 'rgba(255, 99, 132, 1)',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst ScatterChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Scatter Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Scatter.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Scatter data={data} options={options} />\n  </>\n)\n\nexport default ScatterChart\n","import React from 'react'\nimport { Doughnut } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst DoughnutChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Doughnut Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Doughnut.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Doughnut data={data} />\n  </>\n)\n\nexport default DoughnutChart\n","import React from 'react'\nimport { Pie } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst PieChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Pie Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Pie.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Pie data={data} />\n  </>\n)\n\nexport default PieChart\n","import React from 'react'\nimport { PolarArea } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.5)',\n        'rgba(54, 162, 235, 0.5)',\n        'rgba(255, 206, 86, 0.5)',\n        'rgba(75, 192, 192, 0.5)',\n        'rgba(153, 102, 255, 0.5)',\n        'rgba(255, 159, 64, 0.5)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst Polar = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Polar Area Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Polar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <PolarArea data={data} />\n  </>\n)\n\nexport default Polar\n","import React from 'react'\nimport { Radar } from '@reactchartjs/react-chart.js'\n\nconst data = {\n  labels: ['Thing 1', 'Thing 2', 'Thing 3', 'Thing 4', 'Thing 5', 'Thing 6'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [2, 9, 3, 5, 2, 3],\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1,\n    },\n  ],\n}\n\nconst options = {\n  scale: {\n    ticks: { beginAtZero: true },\n  },\n}\n\nconst RadarChart = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>Radar Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Radar.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Radar data={data} options={options} />\n  </>\n)\n\nexport default RadarChart\n","import React, { useEffect, useState } from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst rand = () => Math.round(Math.random() * 20 - 10)\n\nconst genData = () => ({\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [\n    {\n      label: 'Scale',\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n})\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst Dynamic = () => {\n  const [data, setData] = useState(genData())\n\n  useEffect(() => {\n    const interval = setInterval(() => setData(genData()), 5000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <>\n      <div className='header'>\n        <h1 className='title'>Dynamic Bar Chart</h1>\n        <div className='links'>\n          <a\n            className='btn btn-gh'\n            href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Dynamic.js'\n          >\n            Github Source\n          </a>\n        </div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  )\n}\n\nexport default Dynamic\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst rand = () => Math.round(Math.random() * 20 - 10)\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      type: 'line',\n      label: 'Dataset 1',\n      borderColor: 'rgb(54, 162, 235)',\n      borderWidth: 2,\n      fill: false,\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 2',\n      backgroundColor: 'rgb(255, 99, 132)',\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n      borderColor: 'white',\n      borderWidth: 2,\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 3',\n      backgroundColor: 'rgb(75, 192, 192)',\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n  ],\n}\n\nconst MultiType = () => (\n  <>\n    <div className='header'>\n      <h1 className='title'>MultiType Chart</h1>\n      <div className='links'>\n        <a\n          className='btn btn-gh'\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/MultiType.js'\n        >\n          Github Source\n        </a>\n      </div>\n    </div>\n    <Bar data={data} />\n  </>\n)\n\nexport default MultiType\n","import React, { useEffect, useState } from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst rand = () => Math.floor(Math.random() * 255)\n\nconst genData = () => ({\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      type: 'line',\n      label: 'Dataset 1',\n      borderColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      borderWidth: 2,\n      fill: false,\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 2',\n      backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n      borderColor: 'white',\n      borderWidth: 2,\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 3',\n      backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n  ],\n})\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst Crazy = () => {\n  const [data, setData] = useState(genData())\n\n  useEffect(() => {\n    const interval = setInterval(() => setData(genData()), 5000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <>\n      <div className='header'>\n        <h1 className='title'>Crazy Chart</h1>\n        <div className='links'>\n          <a\n            className='btn btn-gh'\n            href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/Crazy.js'\n          >\n            Github Source\n          </a>\n        </div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  )\n}\n\nexport default Crazy\n","import React, { useState } from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\n\nconst rand = () => Math.floor(Math.random() * 255)\n\nconst genData = () => ({\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      type: 'line',\n      label: 'Dataset 1',\n      borderColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      borderWidth: 2,\n      fill: false,\n      data: [rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 2',\n      backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n      borderColor: 'white',\n      borderWidth: 2,\n    },\n    {\n      type: 'bar',\n      label: 'Dataset 3',\n      backgroundColor: `rgb(${rand()}, ${rand()}, ${rand()})`,\n      data: [rand(), rand(), rand(), rand(), rand(), rand(), rand()],\n    },\n  ],\n})\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nconst data = genData()\n\nconst ClickEvents = () => {\n  const [clickedDataset, setClickedDataset] = useState('')\n  const [clickedElement, setClickedElement] = useState('')\n  const [clickedElements, setClickedElements] = useState('')\n\n  const getDatasetAtEvent = dataset => {\n    if (!dataset.length) return\n\n    const datasetIndex = dataset[0].datasetIndex\n    setClickedDataset(data.datasets[datasetIndex].label)\n  }\n\n  const getElementAtEvent = element => {\n    if (!element.length) return\n\n    const { datasetIndex, index } = element[0]\n    setClickedElement(\n      `${data.labels[index]} - ${data.datasets[datasetIndex].data[index]}`\n    )\n  }\n\n  const getElementsAtEvent = elements => {\n    if (!elements.length) return\n\n    setClickedElements(elements.length)\n  }\n\n  return (\n    <>\n      <div className='header'>\n        <h1 className='title'>Chart</h1>\n        <div className='links'>\n          <a\n            className='btn btn-gh'\n            href='https://github.com/reactchartjs/react-chartjs-2/blob/react16/example/src/charts/ClickEvents.js'\n          >\n            Github Source\n          </a>\n        </div>\n      </div>\n      <Bar\n        data={data}\n        options={options}\n        getDatasetAtEvent={getDatasetAtEvent}\n        getElementAtEvent={getElementAtEvent}\n        getElementsAtEvent={getElementsAtEvent}\n      />\n      <div className='text-center'>\n        <p>{clickedElement}</p>\n        <p>{clickedDataset}</p>\n        <p>{clickedElements}</p>\n      </div>\n    </>\n  )\n}\n\nexport default ClickEvents\n","import './reset.css'\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './Home'\nimport VerticalBar from './charts/VerticalBar'\nimport HorizontalBar from './charts/HorizontalBar'\nimport StackedBar from './charts/StackedBar'\nimport GroupedBar from './charts/GroupedBar'\nimport Line from './charts/Line'\nimport MultiAxisLine from './charts/MultiAxisLine'\nimport Scatter from './charts/Scatter'\nimport Doughnut from './charts/Doughnut'\nimport Pie from './charts/Pie'\nimport Polar from './charts/Polar'\nimport Radar from './charts/Radar'\nimport Dynamic from './charts/Dynamic'\nimport MultiType from './charts/MultiType'\nimport Crazy from './charts/Crazy'\nimport ClickEvents from './charts/ClickEvents'\n\nconst App = () => (\n  <Router>\n    <div className='content'>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/vertical-bar' component={VerticalBar} />\n        <Route exact path='/horizontal-bar' component={HorizontalBar} />\n        <Route exact path='/stacked-bar' component={StackedBar} />\n        <Route exact path='/grouped-bar' component={GroupedBar} />\n        <Route exact path='/line' component={Line} />\n        <Route exact path='/multi-axis-line' component={MultiAxisLine} />\n        <Route exact path='/scatter' component={Scatter} />\n        <Route exact path='/doughnut' component={Doughnut} />\n        <Route exact path='/pie' component={Pie} />\n        <Route exact path='/polar' component={Polar} />\n        <Route exact path='/radar' component={Radar} />\n        <Route exact path='/dynamic-bar' component={Dynamic} />\n        <Route exact path='/multi' component={MultiType} />\n        <Route exact path='/crazy' component={Crazy} />\n        <Route exact path='/click-events' component={ClickEvents} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}